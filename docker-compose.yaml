services:
  api-gateway:
    build:
      context: .
      dockerfile: cmd/api/Dockerfile
    image: delivery/api-gateway
    container_name: api-gateway
    restart: always
    env_file: configs/config.env
    environment:
      - SERVICE_NAME=api-gateway
      - SERVICE_ADDRESS=:4401
      - API_SECRET_KEY=6d89aad1-59b6-4f37-9f82-ae0ccf32ceb5
      - ORDERS_SERVICE_ADDRESS=deliveryorders:4403
      - PARTNERS_SERVICE_ADDRESS=deliverypartners:4404
    ports:
      - 80:4401
    networks:
      - delivery
  
  deliverynotifications:
    build:
      context: .
      dockerfile: cmd/notifications/Dockerfile
    image: delivery/notifications
    container_name: deliverynotifications
    restart: always
    env_file: configs/config.env
    environment:
      - SERVICE_NAME=notifications
      - SERVICE_ADDRESS=:4402
      # Sua sau
      - MIGRATION_DIR=file:///api/migrations/notifications/
      - POSTGRES_DSN=postgres://admin:admin@postgres:5432/notificationsdb?sslmode=disable
    volumes:
      - ./migrations/notifications/:/api/migrations/notifications/
    ports:
      - 4402:4402
    networks:
      - delivery

  deliveryorders:
    build:
      context: .
      dockerfile: cmd/orders/Dockerfile
    image: delivery/orders
    container_name: deliveryorders
    restart: always
    env_file: configs/config.env
    environment:
      - SERVICE_NAME=orders
      - SERVICE_ADDRESS=:4403
      # sua sau
      - MIGRATION_DIR=file:///api/migrations/orders/
      - PAYMENT_CALLBACK_URL=http://delivery.local/api/v1/orders/pay
      - READY_CALLBACK_URL=http://delivery.local/api/v1/orders/pickup
      - NOTIFICATION_AGENT_ID=87b77778-6a51-4ef7-a9cd-e2eec44aefaf
      - POSTGRES_DSN=postgres://admin:admin@postgres:5432/ordersdb?sslmode=disable
    volumes:
      - ./migrations/orders/:/api/migrations/orders/
    ports:
      - 4403:4403
    networks:
      - delivery

  deliverypartners:
    build:
      context: .
      dockerfile: cmd/partners/Dockerfile
    image: delivery/partners
    container_name: deliverypartners
    restart: always
    env_file: configs/config.env
    environment:
      - SERVICE_NAME=partners
      - SERVICE_ADDRESS=:4404
      - MIGRATION_DIR=file:///api/migrations/partners/
      - POSTGRES_DSN=postgres://admin:admin@postgres:5432/partnersdb?sslmode=disable
    volumes:
      - ./migrations/partners/:/api/migrations/partners/
    ports:
      - 4404:4404
    networks:
      - delivery
  
  postgres:
    image: postgres:17
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    ports:
      - "5432:5432"  # Expose port 5432 to the host
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persist data
      - ./scripts/database:/docker-entrypoint-initdb.d
    networks:
      - delivery

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    restart: always
    command: start-dev --import-realm
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_PROXY=edge
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloakdb?ssl=allow
      - KC_DB_USERNAME=admin
      - KC_DB_PASSWORD=admin
    depends_on:
      - postgres
    volumes:
      - ./third_party/keycloak/import:/opt/keycloak/data/import
    ports:
      - 8443:8443
      - 8080:8080
    networks:
      - delivery

  redis:
    image: redis:7.4
    restart: on-failure
    container_name: redis
    command: '--requirepass ed1821bc8bb645a298717c0af3382262'
    ports:
      - 6379:6379
    networks:
      - delivery

  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=adminadmin
      - MINIO_REGION_NAME=us-east-1  # add region
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    ports:
      - 9000:9000 # S3 api
      - 9001:9001 # web UI
    networks:
      - delivery

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - 16686:16686 # for UI 
      - 4317:4317 # for gRPC
      - 4318:4318 # for HTTP: https://localhost:4318/v1/traces.
    environment:
      # - LOG_LEVEL=debug
      # - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - delivery

  # Zookeeper 1
  zookeeper1:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper1
    restart: always
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - delivery

  # Kafka 1
  kafka1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka1
    restart: always
    depends_on:
      - zookeeper1
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 1
    networks:
      - delivery

  # Kafka 2
  kafka2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka2
    restart: always
    depends_on:
      - zookeeper1
    ports:
      - "29093:29093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093,PLAINTEXT_HOST://0.0.0.0:29093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093,PLAINTEXT_HOST://localhost:29093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 1
    networks:
      - delivery

  # Kafka 3
  kafka3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka3
    restart: always
    depends_on:
      - zookeeper1
    ports:
      - "29094:29094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094,PLAINTEXT_HOST://0.0.0.0:29094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094,PLAINTEXT_HOST://localhost:29094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 1
    networks:
      - delivery

networks:
  delivery:
    external: true

volumes:
  postgres_data:
  minio_data: